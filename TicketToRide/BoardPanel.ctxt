#BlueJ class context
comment0.target=BoardPanel
comment0.text=\r\n\ Class\ that\ represents\ the\ whole\ board\ panel\ \r\n\r\n\ @author\ Kaley,\ Tyler,\ Ben,\ Zach,\ Sean\r\n\ @version\ 4/29/18\r\n
comment1.params=
comment1.target=int\ currPlayer()
comment1.text=\r\n\ gets\ the\ current\ players\ number\r\n\ \r\n\ @return\ int\ player\ number\r\n
comment10.params=
comment10.target=void\ calculateScore()
comment10.text=\r\n\ Calculates\ players\ final\ score\r\n
comment11.params=e
comment11.target=void\ windowDeactivated(java.awt.event.WindowEvent)
comment11.text=\r\n\ When\ the\ window\ is\ deactivated\r\n\ @param\ e\ windowEvent\ \r\n
comment12.params=e
comment12.target=void\ windowActivated(java.awt.event.WindowEvent)
comment12.text=\r\n\ When\ the\ window\ is\ activated\r\n\ @param\ e\ windowEvent\ \r\n
comment13.params=e
comment13.target=void\ windowDeiconified(java.awt.event.WindowEvent)
comment13.text=\r\n\ When\ the\ window\ is\ deiconified\r\n\ @param\ e\ windowEvent\ \r\n
comment14.params=e
comment14.target=void\ windowIconified(java.awt.event.WindowEvent)
comment14.text=\r\n\ When\ the\ window\ is\ conified\r\n\ @param\ e\ windowEvent\ \r\n
comment15.params=e
comment15.target=void\ windowClosed(java.awt.event.WindowEvent)
comment15.text=\r\n\ When\ the\ window\ is\ closed\r\n\ @param\ e\ windowEvent\ \r\n
comment16.params=e
comment16.target=void\ windowOpened(java.awt.event.WindowEvent)
comment16.text=\r\n\ When\ the\ window\ is\ opened\r\n\ @param\ e\ windowEvent\ \r\n
comment17.params=
comment17.target=void\ updateMoveMade()
comment17.text=\r\n\ updates\ that\ a\ move\ was\ made\r\n
comment18.params=e
comment18.target=void\ mousePressed(java.awt.event.MouseEvent)
comment18.text=\r\n\ implemented\ when\ the\ mouse\ is\ pressed\ \r\n\ \r\n\ @param\ e\ the\ mouse\ event\ that\ happens\r\n
comment19.params=e
comment19.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment19.text=\r\n\ implemented\ when\ the\ mouse\ is\ released\ \r\n\ \r\n\ @param\ e\ the\ mouse\ event\ that\ happens\r\n
comment2.params=
comment2.target=BoardPanel()
comment2.text=\r\n\ Constructor\ for\ objects\ of\ class\ BoardPanel\r\n
comment20.params=e
comment20.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment20.text=\r\n\ implemented\ when\ the\ mouse\ is\ moved\ \r\n\ \r\n\ @param\ e\ the\ mouse\ event\ that\ happens\r\n
comment21.params=e
comment21.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment21.text=\r\n\ implemented\ when\ the\ mouse\ is\ dragged\ \r\n\ \r\n\ @param\ e\ the\ mouse\ event\ that\ happens\r\n
comment22.params=g
comment22.target=void\ paintComponent(java.awt.Graphics)
comment22.text=\r\n\ paint\ component\ method\ to\ paint\ the\ panel\ \r\n\ \r\n\ @param\ g\ the\ graphics\ object\ \r\n
comment23.params=
comment23.target=void\ createAndShowGUI()
comment23.text=\r\n\ create\ the\ panel\ for\ showing\ the\ Jframe\r\n
comment24.params=e
comment24.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment24.text=\r\n\ tells\ the\ user\ to\ make\ a\ action\ if\r\n\ it\ is\ still\ their\ turn\r\n\ @param\ e\ ActionEvent\r\n
comment25.params=e
comment25.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment25.text=\r\n\ When\ an\ action\ gets\ preformed\r\n\ @param\ e\ ActionEvent\r\n
comment26.params=d\ city
comment26.target=Meeples\ meepleChoice(Destination,\ java.lang.String)
comment26.text=\r\n\ Displays\ a\ choice\ panel\ to\ choose\ meeple\ from\ each\ city\r\n\ @param\ Destination\ d\ city\ to\ chose\ from\r\n\ @param\ String\ city\ string\ rep.\ of\ destination\r\n\ @return\ MEppel\ chose\ \r\n
comment27.params=num
comment27.target=void\ wrapPlayerNumber(int)
comment27.text=\r\n\ figures\ out\ what\ player\ is\ up\r\n\ \r\n\ @param\ num\ the\ total\ number\r\n
comment28.params=frame
comment28.target=void\ selectionButtonPressed(javax.swing.JFrame)
comment28.text=\r\n\ when\ the\ selection\ button\ is\ pressed\r\n\ turn\ off\ music\r\n\ \r\n\ @param\ frame\ the\ frame\ on\ the\ screen\r\n\ @param\ clip\ the\ music\ playing\r\n
comment29.params=
comment29.target=void\ runTurns()
comment29.text=\r\n\ method\ that\ runs\ through\ all\ \r\n\ the\ turns\ of\ the\ players\ \r\n
comment3.params=x\ y
comment3.target=BoardPanel(int,\ int)
comment3.text=\r\n\ Constructor\ for\ the\ board\ panel\r\n\ \r\n\ @param\ x\ int\ x\ position\r\n\ @param\ y\ int\ y\ position\r\n
comment30.params=
comment30.target=void\ runSimulation()
comment30.text=\r\n\ run\ the\ simulation\ of\ ticket\ to\ ride\r\n
comment31.params=
comment31.target=void\ run()
comment31.text=\r\n\ calls\ method\ to\r\n\ play\ ticket\ to\ ride\r\n
comment32.params=
comment32.target=void\ swapPanels()
comment32.text=\r\n\ swaps\ between\ the\ panels\ on\ the\ screen\r\n
comment33.params=city1\ city2
comment33.target=boolean\ calcSelect(LocationNode,\ LocationNode)
comment33.text=\r\n\ calculates\ the\ selected\ route\r\n\ \r\n\ @param\ city1\ first\ city\r\n\ @param\ city2\ second\ city\r\n\ @return\ boolean\ true\ if\ you\ can\ make\ the\ move,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ you\ cant\ make\ the\ move\r\n
comment34.params=city
comment34.target=void\ extraSpots(java.util.ArrayList)
comment34.text=\r\n\ initializes\ array\ of\ cities\ w/\ double\ paths\r\n
comment4.params=e
comment4.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment4.text=\r\n\ When\ the\ mouse\ is\ entered\r\n\ @param\ e\ mouse\ event\ happens\r\n
comment5.params=e
comment5.target=void\ mouseExited(java.awt.event.MouseEvent)
comment5.text=\r\n\ When\ the\ mouse\ is\ exited\r\n\ @param\ e\ mouse\ event\ happens\r\n
comment6.params=e
comment6.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment6.text=\r\n\ When\ the\ mouse\ is\ clicked\r\n\ @param\ e\ mouse\ event\ happens\r\n
comment7.params=
comment7.target=void\ revalidate()
comment8.params=points
comment8.target=int\ trackPoints(int)
comment8.text=\r\n\ method\ to\ track\ the\ players\ points\r\n\ \r\n\ @param\ points\ interger\ for\ number\ of\ points\r\n\ @return\ int\ the\ points\ \r\n\ \r\n
comment9.params=e
comment9.target=void\ windowClosing(java.awt.event.WindowEvent)
comment9.text=\r\n\ Method\ to\ claim\ train\ routes\ when\ the\ \r\n\ window\ is\ closed\r\n\ @param\ e\ windowEvent\ window\ gets\ closed\r\n
numComments=35
