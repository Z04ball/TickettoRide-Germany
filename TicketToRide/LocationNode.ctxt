#BlueJ class context
comment0.target=LocationNode
comment0.text=\r\n\ This\ is\ the\ class\ for\ creating\ LocationNodes.\ \r\n\ It\ will\ keep\ track\ of\ cities\ \r\n\ as\ well\ as\ distance\ to\ others,\ colors\ of\ \r\n\ those\ tracks\ and\ all\ connecting\ cities.\r\n\ \r\n\ @author\ Kaley,\ Tyler,\ Ben,\ Zach,\ Sean\r\n\ @version\ (4/13/2018)\r\n
comment1.params=name\ distanceTo\ nextCities\ col\ meeple
comment1.target=LocationNode(Destination,\ int[],\ LocationNode[],\ java.awt.Color[],\ int)
comment1.text=\r\n\ Constructor\ for\ the\ location\ node\ of\ a\ given\ city\r\n\ \r\n\ @param\ name\ the\ name\ of\ the\ city\ (as\ Enum)\r\n\ @param\ distanceTo[]\ length\ to\ surrounding\ cities\r\n\ @param\ nextCities[]\ names\ of\ surrounding\ cities\r\n\ @param\ col[]\ colors\ of\ paths\r\n\ @param\ meeple\ number\ of\ meeples\r\n
comment10.params=
comment10.target=int\ getX()
comment10.text=\r\n\ gets\ the\ x\ coordinate\r\n\ \r\n\ @return\ the\ x\ coordinate\r\n
comment11.params=
comment11.target=int\ getY()
comment11.text=\r\n\ gets\ the\ y\ coordinate\r\n\ \r\n\ @return\ the\ y\ coordinate\r\n
comment12.params=loc
comment12.target=java.awt.Color\ getCol(int)
comment12.text=\r\n\ gets\ the\ color\ at\ a\ location\r\n\ \r\n\ @param\ loc\ the\ location\ you\ are\ at\r\n\ @return\ the\ color\r\n
comment13.params=place
comment13.target=int\ getLength(int)
comment13.text=\r\n\ Gets\ the\ length\ to\ a\ place\r\n\ \r\n\ @param\ place\ the\ place\ to\ get\ the\ distance\ to\r\n\ @return\ int\ the\ distance\ to\ the\ place\r\n
comment14.params=newCity\ tempCol\ distance
comment14.target=void\ addLocation(LocationNode,\ java.awt.Color,\ int)
comment14.text=\r\n\ adds\ a\ location\ \r\n\ \r\n\ @param\ newCity\ the\ city\ to\ set\ the\ array\ value\ to\r\n\ @param\ tempCol\ the\ color\ to\ set\ the\ color\ to\r\n\ @param\ distance\ the\ value\ to\ set\ the\ distance\ to\r\n
comment15.params=
comment15.target=LocationNode[]\ getNextCities()
comment15.text=\r\n\ Getter\ method\ to\ get\ the\ next\ cities\r\n\ \r\n\ @return\ LocationNode[]\ the\ location\ of\ the\ next\ cities\r\n
comment16.params=
comment16.target=java.awt.geom.Ellipse2D.Double\ getEllipse()
comment16.text=\r\n\ gets\ the\ area\ of\ the\ ellipse\r\n\ \r\n\ @return\ the\ area\ of\ the\ ellipse\ \r\n
comment17.params=other
comment17.target=boolean\ isValid(LocationNode)
comment17.text=\r\n\ determins\ if\ the\ move\ is\ valid\r\n\ \r\n\ @param\ other\ LocationNode\ of\ a\ city\r\n\ @return\ boolean\ true\ if\ the\ move\ is\ valid\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ the\ move\ isn't\ valid\r\n
comment18.params=city2
comment18.target=int\ getMatchingLength(LocationNode)
comment18.text=\r\n\ This\ is\ to\ get\ the\ distance\ in\ between\ 2\ specific\r\n\ cities\ that\ are\ connected\r\n\ @parma\ city2\ This\ is\ a\ LocationNode\ that\ is\ where\r\n\ the\ track\ leads\ to.\r\n\ @return\ int\ The\ distance\ to\ this\ location\r\n
comment19.params=city
comment19.target=void\ extraSpots(java.util.ArrayList)
comment2.params=name\ size\ meeple
comment2.target=LocationNode(Destination,\ int,\ int)
comment2.text=\r\n\ Constructor\ for\ the\ location\ node\ of\ a\ given\ city\r\n\ \r\n\ @param\ name\ the\ name\ of\ the\ city\ (as\ Enum)\r\n\ @param\ size\ size\ of\ the\ node\r\n\ @param\ meeple\ number\ of\ meeples\r\n
comment20.params=city2\ player
comment20.target=void\ removeConnection(LocationNode,\ int)
comment20.text=\r\n\ Removes\ the\ objects\ connection\ to\ this\ city,\r\n\ and\ thats\ city's\ connection\ to\ the\ object\r\n\ @param\ city2\ LocationNode\ that\ is\ to\ be\ removed\r\n\ from\ connections\ \r\n\ @param\ player\ the\ player\ whose\ move\ it\ is\r\n
comment21.params=first\ other\ player1
comment21.target=boolean\ addPlayerConnection(LocationNode,\ LocationNode,\ Player)
comment21.text=\r\n\ method\ to\ add\ a\ connection\ between\ cities\ and\ player\r\n\ \r\n\ @param\ other\ LocationNode\ of\ a\ city\r\n\ @param\ currentPlayerNumber\ number\ of\ player\ \r\n\ whose\ turn\ it\ is\r\n\ \r\n\ @return\ boolean\ true\ if\ the\ connection\ could\ be\ made,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ it\ can't\ be\ made\r\n
comment22.params=
comment22.target=int\ getMeeple()
comment22.text=\r\n\ getter\ method\ to\ get\ the\ meeple\r\n\ \r\n\ @return\ int\ the\ meeple\r\n
comment23.params=newVal
comment23.target=void\ setMeeple(int)
comment23.text=\r\n\ setter\ method\ to\ set\ the\ meeple\r\n\ @param\ newVal\ value\ to\ set\ the\ meeple\ at\r\n
comment24.params=
comment24.target=void\ driverTest()
comment24.text=\r\n\ method\ to\ test\ the\ driver\r\n
comment25.params=city\ player1
comment25.target=boolean\ TylersConnectionDotCom(DestinationCard,\ Player)
comment25.text=\r\n\ dertermines\ if\ the\ city\ is\ at\ the\ head\ of\ the\ stack\r\n\ \r\n\ @param\ city2\ city\ on\ the\ stack\r\n\ @return\ boolean\ true\ if\ it\ is\ the\ head,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ it\ isn't\ the\ head\r\n
comment3.params=
comment3.target=LocationNode()
comment3.text=\r\n\ zero\ arguement\ constuctor\ to\ \r\n\ create\ a\ default\ node\r\n
comment4.params=
comment4.target=Destination\ getDestination()
comment4.text=\r\n\ gets\ the\ city\ \r\n\ \r\n\ @return\ the\ enum\ destination\ \r\n\ of\ the\ city\ you\ are\ at\r\n
comment5.params=x\ y\ hor
comment5.target=void\ changeEllipse(int,\ int,\ int)
comment5.text=\r\n\ changes\ the\ size\ of\ the\ ellipse\ \r\n\ that\ is\ around\ the\ city\r\n\ \r\n\ @param\ x\ the\ x\ coordinate\r\n\ @param\ y\ the\ y\ coodinate\r\n\ @param\ hor\ the\ radius\r\n
comment6.params=
comment6.target=java.lang.String\ getCity()
comment6.text=\r\n\ gets\ the\ name\ of\ the\ city\ as\ a\ String\r\n\ \r\n\ @return\ the\ city\r\n
comment7.params=name
comment7.target=void\ setCity(Destination)
comment7.text=\r\n\ sets\ the\ name\ of\ the\ city\r\n\ \r\n\ @param\ name\ the\ name\ of\ the\ city\r\n
comment8.params=xCoordinate
comment8.target=void\ setX(int)
comment8.text=\r\n\ sets\ the\ x\ coordinate\r\n\ \r\n\ @param\ xCoordinate\ the\ value\ \r\n\ to\ set\ the\ x\ coordinate\ to\r\n
comment9.params=yCoordinate
comment9.target=void\ setY(int)
comment9.text=\r\n\ sets\ the\ y\ coordinate\r\n\ \r\n\ @param\ yCoordinate\ the\ value\ \r\n\ to\ set\ the\ y\ coordinate\ to\r\n
numComments=26
